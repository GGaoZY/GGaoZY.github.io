<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>C语言</title>
    <url>/2022/04/16/C%E8%AF%AD%E8%A8%80/</url>
    <content><![CDATA[<h1>第1节-初识C语言</h1>

<hr>
<h2 id="1-数据类型"><a href="#1-数据类型" class="headerlink" title="1. 数据类型"></a>1. 数据类型</h2><h3 id="1-1-数据类型的使用"><a href="#1-1-数据类型的使用" class="headerlink" title="1.1 数据类型的使用"></a>1.1 数据类型的使用</h3><ul>
<li><p>char              &#x2F;&#x2F;字符数据类型</p>
</li>
<li><p>short            &#x2F;&#x2F;短整型</p>
</li>
<li><p>int                 &#x2F;&#x2F;整型</p>
</li>
</ul>
<ul>
<li><p>long              &#x2F;&#x2F;长整型</p>
</li>
<li><p>long long     &#x2F;&#x2F;更长的整型</p>
</li>
<li><p>float             &#x2F;&#x2F;单精度浮点数</p>
</li>
<li><p>double         &#x2F;&#x2F;双精度浮点数</p>
</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//包含一个叫stdio.h的文件</span></span><br><span class="line"><span class="comment">//std-标准 standard input output</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//main前面的int表示main函数调用返回一个整型值</span></span><br><span class="line"><span class="comment">//int main()//主函数-程序的入口</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//	//这里完成任务</span></span><br><span class="line"><span class="comment">//	//在屏幕上输出hello world</span></span><br><span class="line"><span class="comment">//	//函数-printf  f(function)  -printf  -打印函数</span></span><br><span class="line"><span class="comment">//	//库函数-C语言本身提供给我们使用的函数</span></span><br><span class="line"><span class="comment">//	//别人的东西-打招呼</span></span><br><span class="line"><span class="comment">//	//#include</span></span><br><span class="line"><span class="comment">//	printf(&quot;hello world\n&quot;);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//	return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//%c——打印字符</span></span><br><span class="line"><span class="comment">//%d——打印整型</span></span><br><span class="line"><span class="comment">//%f——打印浮点数字——打小数</span></span><br><span class="line"><span class="comment">//%p——以地址为形式打印</span></span><br><span class="line"><span class="comment">//%x——打印16进制数字</span></span><br><span class="line"><span class="comment">//%s——打印字符串</span></span><br><span class="line"><span class="comment">//%o...</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">//char——字符类型</span></span><br><span class="line">	<span class="comment">//char ch = &#x27;A&#x27;;//内存</span></span><br><span class="line">	<span class="comment">//printf(&quot;%c\n&quot;, ch);//%c——打印字符格式的数据</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//short int——短整型</span></span><br><span class="line">	<span class="comment">//int——整型</span></span><br><span class="line">	<span class="comment">//int age = 20;</span></span><br><span class="line">	<span class="comment">//printf(&quot;%d\n&quot;, age);//%d——打印整型十进制数据</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">//long——长整型</span></span><br><span class="line">	<span class="comment">//long num = 100;</span></span><br><span class="line">	<span class="comment">//printf(&quot;%d\n&quot;, num);</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">//float——单精度浮点数</span></span><br><span class="line">	<span class="comment">//float f = 5.0;</span></span><br><span class="line">	<span class="comment">//printf(&quot;%f\n&quot;, f);</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//double——双精度浮点数</span></span><br><span class="line">	<span class="comment">//double d = 3.14;</span></span><br><span class="line">	<span class="comment">//printf(&quot;%lf\n&quot;, d);</span></span><br><span class="line"> </span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="1-2-数据类型的大小"><a href="#1-2-数据类型的大小" class="headerlink" title="1.2 数据类型的大小"></a>1.2 数据类型的大小</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="type">char</span>));</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="type">short</span>));</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="type">long</span>));</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="type">long</span> <span class="type">long</span>));</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="type">float</span>));</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="type">double</span>));</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>字节</p>
<p>计算机中单位</p>
<p>bit——比特位</p>
<p>byte——字节（1byte&#x3D;8bit）</p>
<p><img src="https://cdn.jsdelivr.net/gh/GGaoZY/PicGo/img/image-20220418000134338.png" alt="image-20220418000134338"></p>
<p>C语言标准规定    sizeof(long) &gt;&#x3D; sizeof(int)</p>
<p>​                             (long的大小可以为4个字节也可以为8个字节)</p>
<hr>
<h2 id="2-变量"><a href="#2-变量" class="headerlink" title="2. 变量"></a>2. 变量</h2><h3 id="2-1-定义变量的方法"><a href="#2-1-定义变量的方法" class="headerlink" title="2.1 定义变量的方法"></a>2.1 定义变量的方法</h3><p>类型+变量名&#x3D;赋值</p>
<p>例：int age &#x3D; 150；</p>
<p>float weight &#x3D; 45.5f;</p>
<p>char ch &#x3D; ‘W’;</p>
<h3 id="2-2-变量的分类-局部变量-x2F-全局变量"><a href="#2-2-变量的分类-局部变量-x2F-全局变量" class="headerlink" title="2.2 变量的分类(局部变量&#x2F;全局变量)"></a>2.2 变量的分类(局部变量&#x2F;全局变量)</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> num2 = <span class="number">20</span>;<span class="comment">//全局变量——定义在代码块（&#123;&#125;）外部的变量</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> num1 = <span class="number">10</span>;<span class="comment">//局部变量——定义在代码块（&#123;&#125;）内部的变量</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>！！！注意点:局部变量只能在局部范围内使用</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">	<span class="comment">//局部变量和全局变量的名字建议不要相同——容易误会，产生bug</span></span><br><span class="line">	<span class="comment">//当局部变量和全局变量的名字相同时，局部变量优先</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, a);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/GGaoZY/PicGo/img/image-20220418004312640.png" alt="image-20220418004312640"></p>
<h3 id="2-3-变量的使用"><a href="#2-3-变量的使用" class="headerlink" title="2.3 变量的使用"></a>2.3 变量的使用</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">//计算两个数的和</span></span><br><span class="line">	<span class="type">int</span> num1 = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> num2 = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//输入数据——使用输入函数scanf</span></span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;num1, &amp;num2);<span class="comment">//取地址符号&amp;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//C语言语法规定，变量要定义在当前代码块的最前面</span></span><br><span class="line">	sum = num1 + num2;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;sum = %d\n&quot;</span>, sum);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>！！C语言语法规定，变量要定义在当前代码块的最前面</p>
<p>控制台输出：</p>
<p><img src="https://cdn.jsdelivr.net/gh/GGaoZY/PicGo/img/202204180207640.png" alt="image-20220418020751278"></p>
<h3 id="2-4-变量的作用域和生命周期"><a href="#2-4-变量的作用域和生命周期" class="headerlink" title="2.4 变量的作用域和生命周期"></a>2.4 变量的作用域和生命周期</h3><h4 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h4><p>作用域( scope )，程序设计概念，通常来说，一段程序代码中所用到的名字并不总是有效&#x2F;可用的<br>而限定这个名字的可用性的代码范围就是这个名字的作用域。</p>
<p><strong>局部变量的作用域是变量所在的局部范围。</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">//局部变量的作用域</span></span><br><span class="line">	<span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;num = %d\n&quot;</span>, num);</span><br><span class="line">	&#125;</span><br><span class="line"> </span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><strong>全局变量的作用域是整个工程。</strong></p>
<p>例1：在代码块（{}）外部定义一个变量</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//全局变量的作用域</span></span><br><span class="line"><span class="type">int</span> global = <span class="number">2022</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, global);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>例2：在代码块（{}）外部定义一个变量，定义一个函数，并在主函数里调用（函数这里还没学到，只是测试一下全局变量）</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//全局变量的作用域</span></span><br><span class="line"><span class="type">int</span> global = <span class="number">2022</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">test</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;test()--%d\n&quot;</span>, global);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	test();</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, global);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/GGaoZY/PicGo/img/202204192326715.png" alt="image-20220419232602788"></p>
<p>由此可见全局变量在函数和main函数里都能使用</p>
<p>例3：在源文件里新建一个.c文件，并在这个.c文件内部定义一个变量（全局变量）</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS 1</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> g_val = <span class="number">2022</span>;</span><br></pre></td></tr></table></figure>

<p>再回到原来的文件里使用这个变量（注意这里要用extern声明一下外部符号）</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">//未声明的标识符，需声明</span></span><br><span class="line">	<span class="comment">//extern--声明外部符号的</span></span><br><span class="line">	<span class="keyword">extern</span> <span class="type">int</span> g_val;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;g_val = %d\n&quot;</span>, g_val);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/GGaoZY/PicGo/img/202204192337316.png" alt="image-20220419233749318"></p>
<p>可以看到这里可以成功使用</p>
<h4 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h4><p>变量的生命周期指的是变量的创建到变量的销毁之间的一个时间段</p>
<p><strong>局部变量的生命周期是:进入作用域生命周期开始，出作用域生命周期结束。</strong></p>
<p><strong>全局变量的生命周期是:整个程序的生命周期。</strong></p>
<hr>
<h2 id="3-常量"><a href="#3-常量" class="headerlink" title="3. 常量"></a>3. 常量</h2><p>生活中的有些值是不变的（比如：圆周率，性别，身份证号码，血型等等）</p>
<p>**C语言中的常量分为以下以下几种: **</p>
<h3 id="3-1-字面常量"><a href="#3-1-字面常量" class="headerlink" title="3.1 字面常量"></a>3.1 字面常量</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> num = <span class="number">4</span>;</span><br><span class="line">		<span class="comment">//字面常量</span></span><br><span class="line">		<span class="number">3</span>;</span><br><span class="line">		<span class="number">100</span>;</span><br><span class="line">		<span class="number">3.14</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="3-2-const-修饰的常变量"><a href="#3-2-const-修饰的常变量" class="headerlink" title="3.2 const 修饰的常变量"></a>3.2 const 修饰的常变量</h3><p>引用const之前</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="type">int</span> num = <span class="number">4</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, num);</span><br><span class="line">	num = <span class="number">8</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, num);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/GGaoZY/PicGo/img/202204200009896.png" alt="image-20220420000903885"></p>
<p><strong>这里我们可以看到num的值先是4再是8，num的值可以被改变</strong></p>
<p>引用const之后</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">//const--常属性</span></span><br><span class="line">	<span class="comment">//const修饰的常变量</span></span><br><span class="line">	<span class="type">const</span> <span class="type">int</span> num = <span class="number">4</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, num);</span><br><span class="line">	num = <span class="number">8</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, num);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/GGaoZY/PicGo/img/202204200011096.png" alt="image-20220420001147703"></p>
<p><strong>这里我们看到程序报错，显示num的值不可再被改变</strong></p>
<p>（这里num本质上还是一个变量，但是又有常属性，所以称num为常变量）</p>
<h3 id="3-3-define定义的标识符常量"><a href="#3-3-define定义的标识符常量" class="headerlink" title="3.3 #define定义的标识符常量"></a>3.3 #define定义的标识符常量</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//#define定义的标识符常量</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX 10</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> arr[MAX] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, MAX);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/GGaoZY/PicGo/img/202204200025530.png" alt="image-20220420002459527"></p>
<h3 id="3-4-枚举常量"><a href="#3-4-枚举常量" class="headerlink" title="3.4 枚举常量"></a>3.4 枚举常量</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//枚举常量</span></span><br><span class="line"><span class="comment">//枚举——一一列举</span></span><br><span class="line"><span class="comment">//性别：男、女、保密</span></span><br><span class="line"><span class="comment">//三原色：红、绿、蓝</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//枚举关键——enum</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Sex</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	MALE,</span><br><span class="line">	FEMALE,</span><br><span class="line">	SECRET</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//MALE,FEMALE,SECRET——枚举常量</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">//enum Sex s = FEMALE;</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, MALE);<span class="comment">//0</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, FEMALE);<span class="comment">//1</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, SECRET);<span class="comment">//2</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/GGaoZY/PicGo/img/202204200039713.png" alt="image-20220420003912840"></p>
<p>枚举常量是有值的，并且不可被改变，但是通过枚举类型所创造出来的变量可以被改变。</p>
<hr>
<h2 id="4-字符串-转义字符"><a href="#4-字符串-转义字符" class="headerlink" title="4. 字符串+转义字符"></a>4. 字符串+转义字符</h2><h3 id="4-1-字符串"><a href="#4-1-字符串" class="headerlink" title="4.1 字符串"></a>4.1 字符串</h3><p>“hello bit.\n”<br>这种由双引号( Double Quote )引起来的一串字符称为字符串字面值( String Literal ) , 或者简称字符串。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//字符串类型</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="string">&quot;abcdef&quot;</span>;</span><br><span class="line">	<span class="string">&quot;hello bit&quot;</span>;</span><br><span class="line">	<span class="string">&quot;&quot;</span>;<span class="comment">//空字符串</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><strong>注:字符串的结束标志是一个 \0 的转义字符。在计算字符串长度的时候 \0 是结束标志,不算作字符串内容。</strong></p>
<p>下面我们解释一下：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">char</span> arr1[] = <span class="string">&quot;abc&quot;</span>;<span class="comment">//数组</span></span><br><span class="line">	<span class="type">char</span> arr2[] = &#123; <span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span> &#125;;</span><br><span class="line">		</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, arr1);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, arr2);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/GGaoZY/PicGo/img/202204202315919.png" alt="image-20220420231523944"></p>
<p>根据这个运行结果来看，二者运行结果并不等同。</p>
<p>这时我们再arr2数组最后再加上一个0，我们来看看结果</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">char</span> arr1[] = <span class="string">&quot;abc&quot;</span>;<span class="comment">//数组</span></span><br><span class="line">	<span class="type">char</span> arr2[] = &#123; <span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="number">0</span> &#125;;</span><br><span class="line">		</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, arr1);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, arr2);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/GGaoZY/PicGo/img/202204202327244.png" alt="image-20220420232702928"></p>
<p>此时我们看到输出结果完全一样，突出’\0’的重要性。</p>
<p>由此我们可见”abc”——‘a’，’b’，’c’，’\0’—— ‘\0’是字符串的结束标志（’\0’的值是0）</p>
<p>至于每一个字符都有其对应的值，例如a—97，A—65，这里具体参见ASCII编码。</p>
<p>下面我们再举一个例子</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">char</span> arr1[] = <span class="string">&quot;abc&quot;</span>;</span><br><span class="line">	<span class="type">char</span> arr2[] = &#123; <span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span> &#125;;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">strlen</span>(arr1));<span class="comment">//strlen——string length——计算字符串长度</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">strlen</span>(arr2));</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/GGaoZY/PicGo/img/202204202352670.png" alt="image-20220420235209701"></p>
<p>这里解释一下：</p>
<p>arr1——“abc”；strlen统计长度时，a、b、c分别占一个长度，末尾还有一个’\0’，但是\0只是字符串结束的标志，不算字符串的内容，所以结果为3。</p>
<p>arr2——{ ‘a’,’b’,’c’ }；strle统计长度时，统计完a、b、c3个后，末尾没有’\0’，表明没有截止，则继续往后面的随机值进行统计，直到在随机值里找到一个’\0’才停下。所以对于arr2输出的一个值是不可知的，是随机的。</p>
<p>于是，此题的答案分别为3 和 随机值。、</p>
<h3 id="4-2-转义字符"><a href="#4-2-转义字符" class="headerlink" title="4.2 转义字符"></a>4.2 转义字符</h3><p>对于转义字符，顾名思义，就是转变原来的意思。</p>
<p>举个简单的例子</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS 1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;abcn&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>控制台输出结果：</p>
<p><img src="https://cdn.jsdelivr.net/gh/GGaoZY/PicGo/img/202204210023395.png" alt="image-20220421002354578"></p>
<p>这时我们在n前面加上一个\</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS 1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;abc\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>控制台输出结果：</p>
<p><img src="https://cdn.jsdelivr.net/gh/GGaoZY/PicGo/img/202204210025863.png" alt="image-20220421002558948"></p>
<p>这里我们看到输出结果不一样了，变成换行下来，于是这里的”\n”就是一个转义字符。</p>
<p>下面看一些转义字符。</p>
<table>
<thead>
<tr>
<th>转义字符</th>
<th>释义</th>
</tr>
</thead>
<tbody><tr>
<td>?</td>
<td>在书写连续多个问号时使用，防止他们被解析成三字母词（旧版VS编译器）</td>
</tr>
<tr>
<td>\‘</td>
<td>用于表示字符常量 ‘</td>
</tr>
<tr>
<td>\“</td>
<td>用于表示一个字符串内部的双引号</td>
</tr>
<tr>
<td>\\</td>
<td>用于表示一个反斜杠，防止它被解释为一个转义序列符</td>
</tr>
<tr>
<td>\a</td>
<td>警告字符，蜂鸣</td>
</tr>
<tr>
<td>\b</td>
<td>退格符</td>
</tr>
<tr>
<td>\f</td>
<td>进纸符</td>
</tr>
<tr>
<td>\n</td>
<td>换行</td>
</tr>
<tr>
<td>\r</td>
<td>回车</td>
</tr>
<tr>
<td>\t</td>
<td>水平制表符</td>
</tr>
<tr>
<td>\v</td>
<td>垂直制表符</td>
</tr>
<tr>
<td>\ddd</td>
<td>ddd表示1~3个八进制的数字。 如： \130 X</td>
</tr>
<tr>
<td>\xdd</td>
<td>dd表示2个十六进制数字。 如： \x30 0</td>
</tr>
</tbody></table>
<p>思考题</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS 1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">strlen</span>(<span class="string">&quot;abcdef&quot;</span>));</span><br><span class="line">	<span class="comment">// \32被解析成一个转义字符</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">strlen</span>(<span class="string">&quot;c:\test\32\test.c&quot;</span>));</span><br><span class="line">	<span class="comment">//\32——32是2个8进制数字</span></span><br><span class="line">	<span class="comment">//3 2作为8进制代表的那个十进制数字，作为ASCII码值，对应的字符</span></span><br><span class="line">	<span class="comment">//3*8^1+2*8^0=26</span></span><br><span class="line">	<span class="comment">//32--&gt;10进制--&gt;26--&gt;作为ASCII码值代表的字符</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>控制台输出结果：</p>
<p><img src="https://cdn.jsdelivr.net/gh/GGaoZY/PicGo/img/202204210112928.png" alt="image-20220421011230022"></p>
<p>附一张ASCII表：</p>
<p><img src="https://cdn.jsdelivr.net/gh/GGaoZY/PicGo/img/202204210114231.jpg" alt="R"></p>
<hr>
<h2 id="5-注释"><a href="#5-注释" class="headerlink" title="5. 注释"></a>5. 注释</h2><ol>
<li>代码中有不需要的代码可以直接删除，也可以注释掉</li>
<li>代码中有些代码比较难懂，可以加一下注释文字</li>
</ol>
<p>例如：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Add</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> x+y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*C语言风格注释</span></span><br><span class="line"><span class="comment">int Sub(int x, int y)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">return x-y;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//C++注释风格</span></span><br><span class="line"><span class="comment">//int a = 10;</span></span><br><span class="line"><span class="comment">//调用Add函数，完成加法</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, Add(<span class="number">1</span>, <span class="number">2</span>));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>注释有两种风格：</p>
<ul>
<li><p>C语言风格的注释 &#x2F;*xxxxxx*&#x2F;</p>
<ul>
<li><p>缺陷：不能嵌套注释</p>
<p><img src="https://cdn.jsdelivr.net/gh/GGaoZY/PicGo/img/202204240052383.png" alt="image-20220424005242270"></p>
<p>C语言在走的过程中以”&#x2F;*”开始，只要捕获到”**&#x2F;“就认为注释结束，后面的内容就不再是注释内容，所以无法嵌套注释。</p>
</li>
</ul>
</li>
<li><p>C++风格的注释 &#x2F;&#x2F;xxxxxxxx</p>
<ul>
<li><p>可以注释一行也可以注释多行</p>
<p>VS快捷键：注释——ctrl+k+c，取消注释——ctrl+k+u</p>
</li>
</ul>
</li>
</ul>
<hr>
<h2 id="6-选择语句"><a href="#6-选择语句" class="headerlink" title="6. 选择语句"></a>6. 选择语句</h2><p>如果你好好学习，校招时拿一个好offer，走上人生巅峰。<br>如果你不学习，毕业等于失业，回家卖红薯。<br>这就是选择！</p>
<p>代码实现：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> coding = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;你会好好学习吗？（选择1 or 0）&gt;:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;coding);</span><br><span class="line">	<span class="keyword">if</span> (coding == <span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;坚持，你会有好offer\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;放弃，回家卖红薯\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="7-循环语句"><a href="#7-循环语句" class="headerlink" title="7. 循环语句"></a>7. 循环语句</h2><p>C语言中如何实现循环呢？</p>
<ul>
<li>while语句</li>
<li>for语句</li>
<li>do … while语句</li>
</ul>
<p>这里我们先用while语句举例：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//while循环的实例</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> line = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;计算机专业\n&quot;</span>);</span><br><span class="line">	<span class="keyword">while</span> (line &lt; <span class="number">20000</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		line++;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;我要继续努力敲代码:%d\n&quot;</span>,line);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (line &gt;= <span class="number">20000</span>)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;好offer\n&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>控制台输出：</p>
<p><img src="https://cdn.jsdelivr.net/gh/GGaoZY/PicGo/img/202204240121419.png" alt="image-20220424012113232"></p>
<hr>
<h2 id="8-函数"><a href="#8-函数" class="headerlink" title="8. 函数"></a>8. 函数</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> num1 = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> num2 = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;输入两个操作数:&gt;&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;num1, &amp;num2);</span><br><span class="line">	sum = num1 + num2;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;sum = %d\n&quot;</span>, sum);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>上述代码，写成函数如下：</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">Add</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> z = x + y;</span><br><span class="line">	<span class="keyword">return</span> z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> num1 = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> num2 = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;输入两个操作数:&gt;&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;num1, &amp;num2);</span><br><span class="line">	sum = Add(num1, num2);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;sum = %d\n&quot;</span>, sum);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>函数的特点就是简化代码，代码复用。</p>
<hr>
<h2 id="9-数组"><a href="#9-数组" class="headerlink" title="9. 数组"></a>9. 数组</h2><p>要存储1-10的数字，怎么存储？<br>C语言中给了数组的定义：一组相同类型元素的集合</p>
<h3 id="9-1-数组的定义"><a href="#9-1-数组的定义" class="headerlink" title="9.1 数组的定义"></a>9.1 数组的定义</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> arr[<span class="number">10</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span> &#125;;<span class="comment">//定义一个整形数组，最多放10个元素</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//char ch[20];</span></span><br><span class="line">	<span class="comment">//float arr2[5];</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="9-2-数组的下标"><a href="#9-2-数组的下标" class="headerlink" title="9.2 数组的下标"></a>9.2 数组的下标</h3><p>C语言规定：数组的每个元素都有一个下标，下标是从0开始的。</p>
<p>数组可以通过下标来访问的。</p>
<p>访问形式：arr[下标]</p>
<p>比如：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> arr[<span class="number">10</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span> &#125;;<span class="comment">//定义一个整形数组，最多放10个元素</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, arr[<span class="number">4</span>]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>控制台输出：</p>
<p><img src="https://cdn.jsdelivr.net/gh/GGaoZY/PicGo/img/202204271452199.png" alt="image-20220427145236131"></p>
<p><img src="https://cdn.jsdelivr.net/gh/GGaoZY/PicGo/img/202204271454336.png" alt="image-20220427145416041"></p>
<h3 id="9-3-数组的使用"><a href="#9-3-数组的使用" class="headerlink" title="9.3 数组的使用"></a>9.3 数组的使用</h3><p>如果我们想要打印所有数组元素，这里可以运用我们刚刚学习的while循环实现</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> arr[<span class="number">10</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span> &#125;;<span class="comment">//定义一个整形数组，最多放10个元素</span></span><br><span class="line">	<span class="comment">//0-9</span></span><br><span class="line">	<span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (i&lt;<span class="number">10</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, arr[i]);</span><br><span class="line">		i++;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>控制台输出：</p>
<p><img src="https://cdn.jsdelivr.net/gh/GGaoZY/PicGo/img/202204271501688.png" alt="image-20220427150103766"></p>
<hr>
<h2 id="10-操作符"><a href="#10-操作符" class="headerlink" title="10. 操作符"></a>10. 操作符</h2><p>这里先做简单介绍</p>
<h3 id="10-1-算术操作符"><a href="#10-1-算术操作符" class="headerlink" title="10.1 算术操作符"></a>10.1 算术操作符</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">+  -  *  /  %</span><br></pre></td></tr></table></figure>



<h3 id="10-2-移位操作符"><a href="#10-2-移位操作符" class="headerlink" title="10.2 移位操作符"></a>10.2 移位操作符</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">&gt;&gt;  &lt;&lt;</span><br></pre></td></tr></table></figure>

<p>例子：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">//移（2进制）位操作符</span></span><br><span class="line">	<span class="comment">// &lt;&lt;左移</span></span><br><span class="line">	<span class="comment">// &gt;&gt;右移</span></span><br><span class="line">	<span class="type">int</span> a = <span class="number">1</span>;</span><br><span class="line">	<span class="comment">//整型1占4个字节-32bit位</span></span><br><span class="line">	<span class="comment">//00000000000000000000000000000001</span></span><br><span class="line">	<span class="type">int</span> b = a &lt;&lt; <span class="number">2</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, b);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, a);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>控制台输出：</p>
<p><img src="https://cdn.jsdelivr.net/gh/GGaoZY/PicGo/img/202204271840285.png" alt="image-20220427184011778"></p>
<p>这里解释一下，移位运算符表示的是该数的二进制数向左移（&lt;&lt;)，或者右移（&gt;&gt;)几位的符号，但是原来的数保持不变。</p>
<h3 id="10-3-位操作符"><a href="#10-3-位操作符" class="headerlink" title="10.3 位操作符"></a>10.3 位操作符</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">&amp;  ^  |</span><br></pre></td></tr></table></figure>

<ul>
<li><p>按位与（&amp;）</p>
<p>与（且）的计算规律：对应的数字为1对1时才是1，其他都为0。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">//(2进制）位操作</span></span><br><span class="line">	<span class="comment">// &amp; 按位与</span></span><br><span class="line">	<span class="type">int</span> a = <span class="number">3</span>;</span><br><span class="line">	<span class="comment">//3 = 011</span></span><br><span class="line">	<span class="type">int</span> b = <span class="number">5</span>;</span><br><span class="line">	<span class="comment">//5 = 101</span></span><br><span class="line">	<span class="type">int</span> c = a &amp; b;</span><br><span class="line">	<span class="comment">//001 = 1</span></span><br><span class="line">	<span class="comment">//对应的数字为1对1时才是1，其他都为0</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, c);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>控制台输出：</p>
<p><img src="https://cdn.jsdelivr.net/gh/GGaoZY/PicGo/img/202204272132561.png" alt="image-20220427213205506"></p>
</li>
<li><p>按位或（|）</p>
<p>或的计算规律：对应的数字为0对0时才是0，其他都为1。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">//(2进制）位操作</span></span><br><span class="line">	<span class="comment">// | 按位或</span></span><br><span class="line">	<span class="type">int</span> a = <span class="number">3</span>;</span><br><span class="line">	<span class="comment">//3 = 011</span></span><br><span class="line">	<span class="type">int</span> b = <span class="number">5</span>;</span><br><span class="line">	<span class="comment">//5 = 101</span></span><br><span class="line">	<span class="type">int</span> c = a | b;</span><br><span class="line">	<span class="comment">//111 = 7</span></span><br><span class="line">	<span class="comment">//对应的数字为0对0时才是0，其他都为1</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, c);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>控制台输出：</p>
<p><img src="https://cdn.jsdelivr.net/gh/GGaoZY/PicGo/img/202204272134965.png" alt="image-20220427213426013"></p>
</li>
<li><p>按位异或（^）</p>
<p>异或的计算规律：对应的二进制位相同，则为0；对应的二进制位相异，则为1。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">//(2进制）位操作</span></span><br><span class="line">	<span class="comment">// ^ 按位异或</span></span><br><span class="line">	<span class="type">int</span> a = <span class="number">3</span>;</span><br><span class="line">	<span class="comment">//3 = 011</span></span><br><span class="line">	<span class="type">int</span> b = <span class="number">5</span>;</span><br><span class="line">	<span class="comment">//5 = 101</span></span><br><span class="line">	<span class="type">int</span> c = a ^ b;<span class="comment">//不是次方，时异或</span></span><br><span class="line">	<span class="comment">//对应的二进制位相同，则为0</span></span><br><span class="line">	<span class="comment">//对应的二进制位相异，则为1</span></span><br><span class="line">	<span class="comment">// a^b = 110</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, c);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>控制台输出：</p>
<p><img src="https://cdn.jsdelivr.net/gh/GGaoZY/PicGo/img/202204272142365.png" alt="image-20220427214243033"></p>
</li>
</ul>
<h3 id="10-4-赋值操作符"><a href="#10-4-赋值操作符" class="headerlink" title="10.4 赋值操作符"></a>10.4 赋值操作符</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">=  +=  -=  *=  /=  &amp;=  ^=  |=  &gt;&gt;=  &lt;&lt;=</span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">	a = <span class="number">20</span>;<span class="comment">// = 赋值     == 判断相等</span></span><br><span class="line">	a = a + <span class="number">10</span>;</span><br><span class="line">	a += <span class="number">10</span>;</span><br><span class="line">	a = a - <span class="number">10</span>;</span><br><span class="line">	a -= <span class="number">10</span>;</span><br><span class="line">	a = a &amp; <span class="number">10</span>;</span><br><span class="line">	a &amp;= <span class="number">10</span>;</span><br><span class="line">	<span class="comment">//复合运算符</span></span><br><span class="line">	<span class="comment">//=  +=  -=  *=  /=  &amp;=  ^=  |=  &gt;&gt;=  &lt;&lt;=</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="10-5-单目操作符"><a href="#10-5-单目操作符" class="headerlink" title="10.5 单目操作符"></a>10.5 单目操作符</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">!            逻辑反操作</span><br><span class="line">-            负值</span><br><span class="line">+            正值</span><br><span class="line">&amp;            取地址</span><br><span class="line"><span class="keyword">sizeof</span>       操作数的类型长度（以字节为单位）</span><br><span class="line">~            对一个数的二进制按位取反</span><br><span class="line">--           前置、后置--</span><br><span class="line">++           前置、后置++</span><br><span class="line">*            间接访问操作符(解引用操作符)</span><br><span class="line">(类型)        强制类型转换</span><br></pre></td></tr></table></figure>



<p>例1：!            逻辑反操作</p>
<p><strong>C语言里表示真假,0为假,非0为真。</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">//C语言里表示真假</span></span><br><span class="line">	<span class="comment">//0—假</span></span><br><span class="line">	<span class="comment">//非0—真</span></span><br><span class="line">	<span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, a);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, !a);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>控制台输出：</p>
<p><img src="https://cdn.jsdelivr.net/gh/GGaoZY/PicGo/img/202204272245588.png" alt="image-20220427220158038"></p>
<p>例2：sizeof       操作数的类型长度（以字节为单位）</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">	<span class="comment">//sizeof 计算的是变量/类型所占空间的大小，单位是字节。</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="keyword">sizeof</span>(a));</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="keyword">sizeof</span> a);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>控制台输出：<img src="https://cdn.jsdelivr.net/gh/GGaoZY/PicGo/img/202204272211892.png" alt="image-20220427221120981"></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> arr[<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;;<span class="comment">//10个整型元素的数组</span></span><br><span class="line">	<span class="type">int</span> sz = <span class="number">0</span>;</span><br><span class="line">	<span class="comment">//10*sizeof(int) = 40</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="keyword">sizeof</span>(arr));</span><br><span class="line">	<span class="comment">//计算数组的元素个数</span></span><br><span class="line">	<span class="comment">//个数 = 数组总大小/每个元素的大小</span></span><br><span class="line">	sz = <span class="keyword">sizeof</span>(arr) / <span class="keyword">sizeof</span>(arr[<span class="number">0</span>]);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;sz = %d\n&quot;</span>, sz);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>控制台输出：</p>
<p><img src="https://cdn.jsdelivr.net/gh/GGaoZY/PicGo/img/202204272240994.png" alt="image-20220427224052235"></p>
]]></content>
      <categories>
        <category>C语言</category>
      </categories>
      <tags>
        <tag>C语言</tag>
      </tags>
  </entry>
  <entry>
    <title>Java爬取南通大学教务系统信息</title>
    <url>/2022/04/05/Java%E7%88%AC%E5%8F%96%E5%8D%97%E9%80%9A%E5%A4%A7%E5%AD%A6%E6%95%99%E5%8A%A1%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF/</url>
    <content><![CDATA[<h3 id="Java爬取南通大学教务系统信息"><a href="#Java爬取南通大学教务系统信息" class="headerlink" title="Java爬取南通大学教务系统信息"></a>Java爬取南通大学教务系统信息</h3><p>注意：useragent等响应头（爬教务系统好像不需要）</p>
<p>1、通过抓包获取学校的认证登录链接</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://authserver.ntu.edu.cn/authserver/login?service=http://tdjw.ntu.edu.cn/sso/jziotlogin</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<p>2、第一次发送get请求获取页面，并且解析，找到需要携带登录的参数，如lt 秘钥等等</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;execution=e1s1, password=+MwHdbut9wc6hIxuq3XG1lHcqFjyJOUBHfuXZFB7p/sJc6SSAp0V0eRJPRg8BWPiU+cEmP8qnlQfyH7HR6iJvxKexFDXTIpnsJ+J23cmWjI=, _eventId=submit, lt=LT-623944-hbUqGmrk6OuO0jPj6mBcmPWseDuCPq1641653523202-LqSD-cas, username=1930141729, dllt=userNamePasswordLogin, rmShown=1&#125;</span><br></pre></td></tr></table></figure>

<p>3、第二次发送请求，带着需要的参数如学号密码等 发送post请求 如果登录成功会跳转，先阻止跳转，查看请求码是否是302  如果都满足的话就获取他的重定向的链接 并且获取此次请求的cookie 这里很重要！</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;CASTGC=TGT-168457-amNCEJXhYIBJHAyI6T3rJCf4xh6l4m61UrbxCZajiIJj9kJYxG1641653717838-EIf3-cas, CASPRIVACY=, iPlanetDirectoryPro=xKdAcvwicaUnfNzcyTRg9e&#125;</span><br></pre></td></tr></table></figure>

<p>4、带着第二次请求的cookie去请求成绩的接口就行 这里也有一些参数 需要自己去爬取</p>
<p>成绩接口：<a href="http://tdjw.ntu.edu.cn/jwglxt/cjcx/cjcx_cxXsgrcj.html?doType=query&amp;gnmkdm=N305005">http://tdjw.ntu.edu.cn/jwglxt/cjcx/cjcx_cxXsgrcj.html?doType=query&amp;gnmkdm=N305005</a></p>
]]></content>
      <categories>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown语法</title>
    <url>/2022/04/06/Markdown%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<h1 id="Markdown语法"><a href="#Markdown语法" class="headerlink" title="Markdown语法"></a>Markdown语法</h1><h3 id="Tricks"><a href="#Tricks" class="headerlink" title="Tricks:"></a>Tricks:</h3><ol>
<li>编辑时，<em><strong>Enter</strong></em>会空一行，<em><strong>Shift+Enter</strong></em>不空行 </li>
<li>Markdown可以利用***反斜杠\***来插入一些在语法中有其它意义的符号。<br>例如：如果你很想要用星号加在文字旁边的方式来做出强调效果，你可以在星号的前面加上反斜杠。</li>
</ol>
<ul>
<li><h3 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a>1.标题</h3></li>
</ul>
<p>用”#”加空格。<br>一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。</p>
<p>例：</p>
<h3 id="我是标题"><a href="#我是标题" class="headerlink" title="我是标题"></a>我是标题</h3><ul>
<li><h3 id="2-字体"><a href="#2-字体" class="headerlink" title="2.字体"></a>2.字体</h3></li>
</ul>
<p>**这是加粗的文字**<br>*这是倾斜的文字*<br>***这是斜体加粗的文字***<br>~~这是加删除线的文字~~</p>
<p>注：</p>
<p>例：</p>
<p><strong>这是加粗的文字</strong><br><em>这是倾斜的文字</em><br><em><strong>这是斜体加粗的文字</strong></em><br><del>这是加删除线的文字</del></p>
<ul>
<li><h3 id="3-区块引用"><a href="#3-区块引用" class="headerlink" title="3.区块引用"></a>3.区块引用</h3></li>
</ul>
<p>在段落的第一行最前面加”&gt;”</p>
<p>例：</p>
<blockquote>
<p> 我是段落</p>
</blockquote>
<p>区块引用可以嵌套（例如：引用内的引用），只要根据层次加上不同数量的 &gt; ，</p>
<p>区块内也可以套用其他的 Markdown 语法，包括加粗、列表、代码区块等。</p>
<p>例：</p>
<blockquote>
<h3 id="我是第一层"><a href="#我是第一层" class="headerlink" title="我是第一层"></a>我是第一层</h3><blockquote>
<p>我是第二层</p>
<blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello&quot;</span>)</span><br></pre></td></tr></table></figure>


</blockquote>
</blockquote>
</blockquote>
<ul>
<li><h3 id="3-列表"><a href="#3-列表" class="headerlink" title="3.列表"></a>3.列表</h3></li>
</ul>
<p>无序列表使用星号*、加号-或是减号+加空格作为列表标记，效果一样：</p>
<p>例：</p>
<ul>
<li>第一步</li>
<li>第二步</li>
<li>第三步</li>
</ul>
<p>有序列表则使用数字接着一个英文句点加空格：</p>
<ol>
<li>1</li>
<li>2</li>
<li>3</li>
</ol>
<ul>
<li><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3></li>
</ul>
<p>三个或者三个以上的 - 或者 * 都可以。</p>
<p>例：</p>
<hr>
<hr>
<ul>
<li><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3></li>
</ul>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">表头|表头|表头</span><br><span class="line">---|:--:|---:</span><br><span class="line">内容|内容|内容</span><br><span class="line">内容|内容|内容</span><br><span class="line"></span><br><span class="line">第二行分割表头和内容。</span><br><span class="line"><span class="bullet">-</span> 有一个就行，为了对齐，多加了几个</span><br><span class="line">文字默认居左</span><br><span class="line">-两边加：表示文字居中</span><br><span class="line">-右边加：表示文字居右</span><br><span class="line">注：原生的语法两边都要用 | 包起来。此处省略</span><br></pre></td></tr></table></figure>

<p>例：</p>
<table>
<thead>
<tr>
<th>姓名</th>
<th align="center">技能</th>
<th align="right">排行</th>
</tr>
</thead>
<tbody><tr>
<td>刘备</td>
<td align="center">哭</td>
<td align="right">大哥</td>
</tr>
<tr>
<td>关羽</td>
<td align="center">打</td>
<td align="right">二哥</td>
</tr>
<tr>
<td>张飞</td>
<td align="center">骂</td>
<td align="right">三弟</td>
</tr>
</tbody></table>
<ul>
<li><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3></li>
</ul>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="code">`单行代码内容`</span></span><br><span class="line"><span class="code">```代码块```</span>左下角可以选择语言</span><br></pre></td></tr></table></figure>

<p>例：</p>
<ol>
<li><p>单行代码<br><code>print(&quot;helloworld!&quot;)</code></p>
</li>
<li><p>代码块</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<ul>
<li><h3 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h3></li>
</ul>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">超链接名</span>](<span class="link">超链接地址 &quot;超链接title&quot;</span>)</span><br><span class="line">title可加可不加</span><br></pre></td></tr></table></figure>

<p>例：<br><a href="http://jianshu.com/" title="jianshu">简书</a><br><a href="http://baidu.com/" title="baidu">百度</a></p>
]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>VS2022里strlen需要引用的头文件</title>
    <url>/2022/04/21/VS2022%E9%87%8Cstrlen%E9%9C%80%E8%A6%81%E5%BA%94%E5%BC%95%E7%94%A8%E7%9A%84%E5%A4%B4%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<h1 id="VS2022里strlen需要引用的头文件"><a href="#VS2022里strlen需要引用的头文件" class="headerlink" title="VS2022里strlen需要引用的头文件"></a>VS2022里strlen需要引用的头文件</h1><p>今天用VS平台学习C语言，需要计算字符串长度的时候，发现strlen（arr1），跑不起来，提示E0020错误。</p>
<p><img src="https://cdn.jsdelivr.net/gh/GGaoZY/PicGo/img/202204210010164.png" alt="image-20220421000959945"></p>
<p><img src="https://cdn.jsdelivr.net/gh/GGaoZY/PicGo/img/202204210010947.png" alt="image-20220421001013761"></p>
<p>经过查找，发现需要引用另一个头文件。</p>
<p>&#x2F;&#x2F;#include &lt;string.h&gt;</p>
<p><img src="https://cdn.jsdelivr.net/gh/GGaoZY/PicGo/img/202204210010100.png" alt="image-20220421001055606"></p>
<p><img src="https://cdn.jsdelivr.net/gh/GGaoZY/PicGo/img/202204210011146.png" alt="image-20220421001121626"></p>
<p>问题解决，代码成功运行，以此记录。</p>
]]></content>
      <tags>
        <tag>C语言</tag>
      </tags>
  </entry>
  <entry>
    <title>更换Hexo博客</title>
    <url>/2022/04/05/%E6%9B%B4%E6%8D%A2Hexo%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h1 id="浅谈Hexo"><a href="#浅谈Hexo" class="headerlink" title="浅谈Hexo"></a>浅谈Hexo</h1><h3 id="原因："><a href="#原因：" class="headerlink" title="原因："></a>原因：</h3><p>我以前用的是wordpress，但是他的文章不支持Markdown语法，所以就换了一下，以后写博客就更方便了。</p>
<p>其实我是喜欢写点东西的，所以我花了几天的时间研究了一下Hexo，今天正式更换啦，欢迎大家来访！</p>
]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>日常</tag>
      </tags>
  </entry>
  <entry>
    <title>有关C语言中出现有关scanf报错的处理办法</title>
    <url>/2022/04/18/%E6%9C%89%E5%85%B3C%E8%AF%AD%E8%A8%80%E4%B8%AD%E5%87%BA%E7%8E%B0%E6%9C%89%E5%85%B3scanf%E6%8A%A5%E9%94%99%E7%9A%84%E5%A4%84%E7%90%86%E5%8A%9E%E6%B3%95/</url>
    <content><![CDATA[<h1 id="有关C语言中出现有关scanf报错的处理办法"><a href="#有关C语言中出现有关scanf报错的处理办法" class="headerlink" title="有关C语言中出现有关scanf报错的处理办法"></a>有关C语言中出现有关scanf报错的处理办法</h1><p>相信不少小伙伴在初学C语言的过程中，都曾遇见过以下这种报错情况</p>
<img src="https://cdn.jsdelivr.net/gh/GGaoZY/PicGo/img/202204180204776.png" alt="image-20220418013333796"  />

<p>这是由于，在使用VS的情况下，认为C语言scanf不安全所做出的提醒</p>
<p>根据报错提示可以看出，它的建议是将scanf 改为scanf_s，但是这种方法修改过后会使这段程序失去了跨平台性</p>
<p>scanf是C语言提供的</p>
<p>scanf_s不是标准C语言提供的，是VS编译器提供的</p>
<p>那么该怎么办呢？</p>
<p>这边提供一种最简单的的方法就是在程序的第一行加入以下语句</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS 1</span></span><br></pre></td></tr></table></figure>

<p>但是吧，如果说每次敲代码之前都要先加入一行代码，很费事！</p>
<p>下面介绍一种方法</p>
<p>首先找到这个文件</p>
<p><img src="https://cdn.jsdelivr.net/gh/GGaoZY/PicGo/img/image-20220418014042296.png" alt="image-20220418014042296"></p>
<p>大体路径是D:\Visual Studio 2022\Common7\IDE\VC\VCProjectItems</p>
<p>找到这个文件之后，右击选中，然后打开方式选择记事本。</p>
<p><img src="https://cdn.jsdelivr.net/gh/GGaoZY/PicGo/img/image-20220418014946378.png" alt="image-20220418014946378"></p>
<p>在记事本中复制#define _CRT_SECURE_NO_WARNINGS 1（直接复制，切忌多打少打空格）</p>
<p>最后点击保存的时候可能会发现保存不了，大体是说没有权限，访问被拒绝。</p>
<p><img src="https://cdn.jsdelivr.net/gh/GGaoZY/PicGo/img/29D05A33348F5FB82F496741495B8E04.png" alt="img"></p>
<p>面对这种情况，直接使用最简单粗暴的方法，将这个文件拖到桌面（！！！重点要记好这个文件的路径！！！）</p>
<p>再点开输入#define _CRT_SECURE_NO_WARNINGS 1</p>
<p>这个时候已经可以保存了，接下来将这个文件拖回到原来的路径下就好啦！</p>
<p>你的VS在每次使用时第一行都会自动有#define_CRT_SECURE_NO_WARNINGS 1，不用再每次写这行代码了，这样在使用scanf函数时就不会报错啦！</p>
<p>这样一来，问题得以完美解决！</p>
]]></content>
      <tags>
        <tag>C语言</tag>
      </tags>
  </entry>
</search>
